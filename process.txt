1. django-admin startproject resume

2. django-admin startapp biodata

3. settings.py -> 
	import os
	STATIC_DIR = os.path.join(BASE_DIR,'static'),
	TEMPLATES_DIR = os.path.join(BASE_DIR,'templates')
	TEMPLATES = ['DIRS': [TEMPLATES_DIR],]
	STATIC_URL = '/static/'
	STATICFILE_DIR = [
    	STATIC_DIR
	]
	INSTALLED_APPS = ['biodata',]

4. create folder inside biodata app ->
	static/biodata -> css , img , js 
	templates -> base.html , index.html ....

5. runs onces to check --> python manage.py runserver 8000

6. create super user -> 
	pyhton manage.py makemigrations
	python manage.py migrate
	python manage.py createsuperuser
	enter --> username , password , confirm_password
	run on browser- > http://127.0.0.1:8000/admin/

7. create forms.py file in biodata folder

8. css -- > index.css
    base.html -> In head -->
					{% load static %}
					<title>{% block title %}Base title{% endblock title %}</title>
					{% block basecss %}
						<link rel="stylesheet" href="{% static 'biodata/css/index.css' %}">
					{% endblock basecss %} 
					In body -->
					{% block resume %}{% endblock resume %}
	index.html-> 
					{% extends 'base.html' %}
					{% load static %}
					{% block title %} Resume {% endblock title %}
					{% block resume %}
					<h1>Ajay is here</h1>
					{% endblock resume %}

9. setup url  in resume folder -> 
	from biodata import views as v
	urlpattern = [ path('', v.index, name="index"),]

10. setup views in biodata
	def index(request):
		return render(request, 'index.html')

11.create resume data save into database - 
	 model.py --> admin --> settings
						--> url
						--> forms --> views --> template

12. fetch user data from databse and create table to represent-
	from django.contrib.auth import get_user_model
	User = get_user_model()
	in index view :
		show = User.objects.all()

13. delete user - 
	views.py -->
	def delete_user(request, id):
    if request.method == 'POST':
        pi = User.objects.get(pk=id)
        pi.delete()
        return HttpResponseRedirect('/')
	urls.py --> 
		path('delete/<int:id>/', v.delete_user, name="delete"),
	index.html -->
		<form action="{% url 'delete' st.id %}" method="POST" class="d-inline">
                                {% csrf_token %}
                                <input type="submit" class="btn btn-danger" value="Delete">
        </form>

14. update user --> create new update.html
	views.py -> 
	def update_user(request, id):
    global show1
    if request.method == 'POST':
        pi = User.objects.get(pk=id)
        fr = ResumeForm(request.POST, request.FILES, instance=pi)
        if fr.is_valid():
            messages.success(request, 'Data updated successfullly ')
            fr.save()
    else:
        pi = User.objects.get(pk=id)
        show1 = User.objects.get(id=id)
        fr = ResumeForm(instance=pi)
    return render(request, 'update.html', {'form': fr, 'show1': show1, })
	urls.py ->
	    path('<int:id>/', v.update_user, name="update"),
	update.html->
		copy form from index.html

15. create new template and change all structure of html get new theme bootstrap and edit in all FILES

16. create login and logout features
	Add reset password features as email send 
	dashboard theme also add

